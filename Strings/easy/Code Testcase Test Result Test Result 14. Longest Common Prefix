class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if (strs.empty()) return "";  // Edge case: empty vector
        
        // Start with the first string as the longest common prefix
        string prefix = strs[0];
        
        // Compare the prefix with each subsequent string
        for (int i = 1; i < strs.size(); i++) {
            // Find the common prefix between the current prefix and the next string
            while (strs[i].find(prefix) != 0) {
                // Reduce the prefix length
                prefix = prefix.substr(0, prefix.size() - 1);
                
                // If the prefix becomes empty, return ""
                if (prefix.empty()) return "";
            }
        }
        
        return prefix;
    }
};
